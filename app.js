const { createBot, createProvider, createFlow, addKeyword, EVENTS } = require('@bot-whatsapp/bot')


const QRPortalWeb = require('@bot-whatsapp/portal')
const BaileysProvider = require('@bot-whatsapp/provider/baileys')
//const MockAdapter = require('@bot-whatsapp/database/mock')
const MongoAdapter = require('@bot-whatsapp/database/mongo')
require('dotenv').config()

const menu = [
        'Dependiendo el motivo de su consulta, escriba el n√∫mero seg√∫n la opci√≥n deseada üòÑ',
        'üëâ 1. *Preguntas* para mostrar las preguntas m√°s frecuentes de nuestros clientes',
        'üëâ 2. *Precios*  para consultar el valor de nuestros productos',
        'üëâ 3. *Contactar* para contactarte directamente con uno de nuestros asesores',
        'üëâ 4. *Redes* para ver nuestras redes',
        'üëâ 5. *Direccion* para ver la direcci√≥n de nuestro local y nuestros horarios de apertura/cierre',
        'üëâ 6. *Reclamos* para reclamar un fallo en un producto o un faltante en su paquete',
        '',
        '',
        'üëâ 0. *Salir* para salir de este men√∫',
    ]


const menuReclamos = [
        '¬øA qu√© se debe tu reclamo? üò•',
        'üëâ 1. Una falla en el producto',
        'üëâ 2. Un faltante en el paquete',
        'üëâ 3. Recib√≠ un producto distinto al que compr√©',
        'üëâ 4. Me arrepent√≠ de mi compra',
        '',
        'üëâ 0. Volver al men√∫ principal',
    
    ]

const flowReclamos = addKeyword(EVENTS.ACTION)
    .addAnswer(menuReclamos,
    { capture: true },  async (ctx, { gotoFlow, fallBack, flowDynamic }) => {
        if (!["1", "2", "3", ,"4", "0", "Salir"].includes(ctx.body)) {
            return fallBack(
            "Respuesta no v√°lida, por favor selecciona una de las opciones."
            );
        }
        switch(ctx.body){
            case "1":
                return await flowDynamic([
                    'Si tu producto tiene una falla necesitar√≠a los siguientes datos: ',
                    '- Una explicaci√≥n del inconveniente',
                    '- Un video del inconveniente',
                    '- Si lo compraste por MercadoLibre o por nuestra p√°gina web necesitar√≠a tu nombre de usuario',
                    '- La fecha en la que compraste el producto',
                    'Una vez tengamos todos estos datos deber√°s esperar a que un asesor te contacte para ver como seguir el caso üòÅ',
                    '',
                    'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                ],{
                    delay: 4000,
                });
            case "2":
                return await flowDynamic([
                    'Si recibiste tu paquete con menos productos de los que compraste necesitar√≠a los siguientes datos: ',
                    '- Si compraste por MercadoLibre o por nuestra p√°gina web necesitar√≠a tu nombre de usuario',
                    '- Una foto de todos los productos que te llegaron',
                    '- La fecha en la que compraste',
                    '- Un alias/cvu/cbu',
                    'Una vez tengamos todos estos datos deber√°s esperar a que un asesor te contacte para ver como seguir el caso üòÅ',
                    '',
                    'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                ],{
                    delay: 4000,
                });
            case "3": 
                return await flowDynamic([
                    'Si recibiste un producto distinto al que compraste necesitar√≠a los siguientes datos: ',
                    '- Si compraste por MercadoLibre o por nuestra p√°gina web necesitar√≠a tu nombre de usuario',
                    '- Una foto de el o los productos que te llegaron',
                    '- La fecha en la que compraste',
                    '- Un alias/cvu/cbu',
                    '- El domicilio con el que realizaste la compra',
                    'Una vez tengamos todos estos datos deber√°s esperar a que un asesor te contacte para ver como seguir el caso üòÅ',
                    '',
                    'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                ],{
                    delay: 4000,
                });
            case "4": 
                return await flowDynamic([
                    'Si te arrepentiste de la compra y quer√©s devolver el producto, record√° que: ',
                    '- Nuestra garant√≠a es de un mes',
                    '- Si el producto es de uso personal no tiene devoluci√≥n salvo que el mismo nunca haya sido abierto/usado',
                    '- Si compraste por MercadoLibre ten√©s que hacer el reclamo por ese medio',
                    '- El env√≠o corre por cuenta del comprador',
                    '',
                    'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                ],{
                    delay: 4000,
                });
            case "0":
                return gotoFlow(menuFlow);
            case "Salir":
                return gotoFlow(menuFlow);
        }
    })



const menuCategorias = [
        '¬øQu√© estas buscando? ü§î',
        'üëâ 1. Manicura',
        'üëâ 2. Cuidado Personal & Belleza',
        'üëâ 3. Aromatizaci√≥n',
        'üëâ 4. Electr√≥nica',
        'üëâ 5. Iluminaci√≥n',
        'üëâ 6. Hogar',
        'üëâ 7. Regaler√≠a',
        '',
        'üëâ 0. Volver al men√∫ principal'
    ]



const flowPrecios = addKeyword(EVENTS.ACTION)
    .addAnswer(menuCategorias,
        { capture: true },  async (ctx, { gotoFlow, fallBack, flowDynamic }) => {
            
            if (!["1", "2", "3", ,"4", "5", "6", "7", "0", "Salir"].includes(ctx.body)) {
                return fallBack(
                "Respuesta no v√°lida, por favor selecciona una de las opciones."
                );
            }
            
            
                switch(ctx.body){
                    case "1":
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *MANICURA*: ',
                            'https://www.perfucasa.com/unas/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "2":
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *CUIDADO PERSONAL & BELLEZA*: ',
                            'https://www.perfucasa.com/belleza/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "3": 
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *AROMATIZACI√ìN*: ',
                            'https://www.perfucasa.com/aromatizacion/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "4": 
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *ELECTR√ìNICA*: ',
                            'https://www.perfucasa.com/electronica/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "5": 
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *ILUMINACI√ìN*: ',
                            'https://www.perfucasa.com/iluminacion/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "6": 
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *HOGAR*: ',
                            'https://www.perfucasa.com/hogar/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "7": 
                        return await flowDynamic([
                            'Te dejo todos nuestros productos disponibles de la categor√≠a *REGALER√çA*: ',
                            'https://www.perfucasa.com/regaleria/',
                            '',
                            'Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!'
                        ],{
                            delay: 3000,
                        });
                    case "0":
                        return gotoFlow(menuFlow);
                    case "Salir":
                        return gotoFlow(menuFlow);
                }
            
           
        
        })

const flowContactar = addKeyword(EVENTS.ACTION)
    .addAnswer([
        '*HORARIOS DE ATENCI√ìN* de 11 a 19hs üôè',
        'Si necesitas comunicarte con uno de nuestros asesores podes llamar a cualquiera de los siguientes n√∫meros:',
        '+54 9 11 3170-2270 o +54 9 11 2670-2222'
    ],{
        delay: 4000,
    })
    .addAnswer('Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!',{
        delay: 2000,
    })

const flowRedes = addKeyword(EVENTS.ACTION)
    .addAnswer([
        'Te dejo por ac√° nuestras redes y m√©todos de contacto üòé',
        '*Mail*: perfucasa@ventas.com',
        '*Instagram*: https://instagram.com/perfucasa',
        '*Facebook*: https://www.facebook.com/perfucasa',
        '*Youtube*: https://youtube.com/perfucasa',
        '*TikTok*: https://www.tiktok.com/@perfucasalocal',
        '*Whatsapp*: +54 9 11 3170-2270 o +54 9 11 2670-2222'
    ],{
        delay: 4000,
    })
    .addAnswer('Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!',{
        delay: 2000,
    })

const flowDireccion = addKeyword(EVENTS.ACTION)
    .addAnswer('üìç Estamos en Av. Cabildo 2431, Belgrano, CABA. De lunes a s√°bados de 11 a 19hs.',{
        delay: 2000,
    })
    .addAnswer('Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!',{
        delay: 2000,
    })

const flowPreguntas = addKeyword(EVENTS.ACTION)
    .addAnswer([
        'üëÄ Ac√° te dejo algunas de las preguntas m√°s frecuentes que nos realizan:',
        '',
        '*¬øEs seguro comprar en su tienda online?*',
        '¬°S√≠! En nuestra tienda online contamos con medidas de seguridad altamente efectivas para proteger tus datos personales y bancarios. Adem√°s, utilizamos sistemas de encriptaci√≥n para garantizar la seguridad de tus transacciones. Pod√©s comprar con confianza.',
        '',
        '*¬øHacen envios?*',
        'Hacemos envios a todo el pa√≠s a trav√©s de Correo Argentino. Tambi√©n, env√≠os por moto en el dia (comprando antes de las 13:00 hs) que se entregan de 15:00 a 21:00 hs. Si ten√©s otra franja horaria, por favor aclaralo en las notas de pedido.',
        '',
        '*¬øPuedo retirar la compra en su tienda?*',
        'S√≠, una vez confirmada la compra pod√©s retirar el pedido en Av Cabildo 2431, Belgrano, C.A.B.A. Nosotros te enviaremos un mensaje cuando tu compra este lista para retirar.',
        '',
        '*¬øCu√°l es el tiempo de entrega de los productos?*',
        'El tiempo de entrega de nuestros productos var√≠a dependiendo del producto y la ubicaci√≥n de env√≠o. Nos esforzamos por enviar tu pedido lo m√°s r√°pido posible y te mantendremos informado de los tiempos de env√≠o y entrega estimados en todo momento.',
        '',
        '*¬øPuedo devolver un producto si no estoy satisfecho?*',
        '¬°Por supuesto! Si por alguna raz√≥n no est√°s satisfecho con tu compra, pod√©s devolver el producto dentro de los 30 d√≠as de la recepci√≥n del mismo. Ponete en contacto con nuestro servicio de atenci√≥n al cliente para m√°s informaci√≥n sobre nuestra pol√≠tica de devoluciones.',
        '',
        '*¬øC√≥mo puedo pagar mis compras?*',
        'Aceptamos diferentes formas de pago, como tarjetas de cr√©dito y d√©bito, transferencias bancarias y pagos en efectivo. En el momento de la compra, podr√°s seleccionar la forma de pago que mejor te convenga.'
    ],{
        delay: 6000,
    })
    .addAnswer('Si necesitas m√°s ayuda podes volver al men√∫ digitando *MENU* ¬°Saludos!',{
        delay: 2000,
    })

/* EVENTS.WELCOME por opciones menu , 'menu' */

const flowVoice = addKeyword(EVENTS.VOICE_NOTE)
    .addAnswer("Lo sentimos, por el momento no podemos escuchar audiosüòî. Si necesitas consultar algo, digit√° *MENU*",{
        delay: 2000,
    });

const menuFlow = addKeyword(['menu', 'men√∫', 'hola', 'holis', 'buenas', 'buenos', 'hello', 'ola', 'alo'])
    .addAnswer('üôå ¬°Hola! Est√°s hablando con *PERFUCASA*. ¬øEn qu√© podemos ayudarte? ',{
        delay: 8000,
    })
    .addAnswer(
        menu,
        { capture: true },
        async (ctx, { gotoFlow, fallBack, flowDynamic }) => {
        if (!["1", "2", "3", "4", "5", "6", "0", "Reclamos", "Precios", "Contactar", "Redes", "Direccion", "Direcci√≥n", "Preguntas", "Salir"].includes(ctx.body)) {
        return fallBack(
        "Respuesta no v√°lida, por favor selecciona una de las opciones."
        );
        }
        switch (ctx.body) {
            case "6":
                bandera = 1
                return gotoFlow(flowReclamos);
            case "2":
                return gotoFlow(flowPrecios);
            case "3":
                return gotoFlow(flowContactar);
            case "4":
                return gotoFlow(flowRedes);
            case "5":
                return gotoFlow(flowDireccion);
            case "1":
                return gotoFlow(flowPreguntas);
            case "Reclamos":
                return gotoFlow(flowReclamos);
            case "Precios":
                return gotoFlow(flowPrecios);
            case "Contactar":
                return gotoFlow(flowContactar);
            case "Redes":
                return gotoFlow(flowRedes);
            case "Direccion":
                return gotoFlow(flowDireccion);
            case "Preguntas":
                return gotoFlow(flowPreguntas);
            case "Salir":
                return await flowDynamic(
                    "Saliendo... Puedes volver a acceder a este men√∫ escribiendo *MENU*");
            case "0":
                return await flowDynamic(
                "Saliendo... Puedes volver a acceder a este men√∫ escribiendo *MENU*"
        );
            }
        }
    );
  


const main = async () => {
    //const adapterDB = new MockAdapter()
    const adapterDB = new MongoAdapter({
        dbUri: process.env.MONGO_DB_URI,
        dbName: "YoutubeTest"
    })
    const adapterFlow = createFlow([menuFlow, flowPrecios, flowDireccion, flowContactar, flowReclamos, flowRedes, flowVoice])
    const adapterProvider = createProvider(BaileysProvider)

    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    })

    QRPortalWeb()
}

main()
